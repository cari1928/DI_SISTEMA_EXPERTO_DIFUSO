package Interfaces;

import SED.Combinaciones;
import SED.Etiqueta;
import SED.FAM;
import SED.GestionArchivos;
import SED.MotorInferencia;
import SED.Variable;
import java.io.File;
import java.io.IOException;
import java.text.DecimalFormat;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 *
 * @author Tenistas
 */
public class Principal extends javax.swing.JFrame {

    private MotorInferencia objMI;
    private FAM objFAM;
    List<Etiqueta> listResultado;
    boolean salida;

    public Principal() {
        initComponents();
        listResultado = new ArrayList<>();
        objMI = new MotorInferencia();
        setLocationRelativeTo(null);
        setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jmiArchivos = new javax.swing.JMenuItem();
        jMenu8 = new javax.swing.JMenu();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu7 = new javax.swing.JMenu();
        jmiCentroGravedad = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jmiSalidaDifusa = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/tennis-racket-155963_640.png"))); // NOI18N

        jMenu1.setText("Modelo");

        jMenuItem1.setText("Nuevo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenu3.setText("Actualizar");

        jMenuItem3.setText("Nueva Variable");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenu1.add(jMenu3);

        jmiArchivos.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        jmiArchivos.setText("Archivos");
        jmiArchivos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiArchivosActionPerformed(evt);
            }
        });
        jMenu1.add(jmiArchivos);

        jMenuBar1.add(jMenu1);

        jMenu8.setText("RNA");

        jMenuItem6.setText("Entrenar");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu8.add(jMenuItem6);

        jMenuItem7.setText("Usar entrenada");
        jMenu8.add(jMenuItem7);

        jMenuBar1.add(jMenu8);

        jMenu2.setText("Motor Inferencia");

        jMenuItem2.setText("Fuzzyfication");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenu7.setText("Defuzzyfication");

        jmiCentroGravedad.setText("Centro de gravedad");
        jmiCentroGravedad.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiCentroGravedadActionPerformed(evt);
            }
        });
        jMenu7.add(jmiCentroGravedad);

        jMenu2.add(jMenu7);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("Mostrar");

        jmiSalidaDifusa.setText("Salida Difusa");
        jmiSalidaDifusa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiSalidaDifusaActionPerformed(evt);
            }
        });
        jMenu5.add(jmiSalidaDifusa);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        String directorio = "SED";
        File index = new File(directorio);
        String[] entries = index.list();

        if (!index.exists()) {
            index.mkdir();
            JOptionPane.showMessageDialog(null, "Los archivos se han limpiado exitosamente");
        } else {
            for (String s : entries) {
                File currentFile = new File(index.getPath(), s);
                currentFile.delete();
            }
            JOptionPane.showMessageDialog(null, "Los archivos se han limpiado exitosamente");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        salida = false;
        new discurso(salida);
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        GestionArchivos objG = new GestionArchivos();
        List<String> listVars;
        dato_x guiD;
        try {
            listVars = objG.leer("SED/Datos");
            for (String variable : listVars) {
                guiD = new dato_x(variable.trim());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jmiSalidaDifusaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiSalidaDifusaActionPerformed
        String resultado = "";
        try {
            for (int i = 0; i < listResultado.size(); i++) {
                resultado += listResultado.get(i).etiqueta + " : " + listResultado.get(i).membresia + "\n";
            }

            JOptionPane.showMessageDialog(this, resultado, "Salidas Difusas", JOptionPane.INFORMATION_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Archivos no disponibles");
        }
    }//GEN-LAST:event_jmiSalidaDifusaActionPerformed

    private void jmiArchivosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiArchivosActionPerformed
        //PARA PRUEBAS!!!!!
        GestionArchivos objG = new GestionArchivos();
        List<String> listR, listV;
        String archivo;
        try {
            listR = objG.leer("SED/Datos");
            System.out.println("DATOS");
            for (String rVar : listR) {
                System.out.println(rVar);
                archivo = "SED/" + rVar;
                listV = objG.leer(archivo.trim());

                for (String datos : listV) {
                    System.out.println(datos);
                }
            }

            listR = objG.leer("SED/FAM");
            System.out.println("FAM");
            for (String registros : listR) {
                System.out.println(registros);
            }
        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_jmiArchivosActionPerformed

    private void jmiCentroGravedadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiCentroGravedadActionPerformed
        double centroide;
        try {
            GestionArchivos objG = new GestionArchivos();
            String variable = "";
            List<String> registros;
            registros = objG.leer("SED/Datos");
            for (String reg : registros) {
                if (reg.contains("-S")) {
                    variable = reg;
                }
            }
            List<String[]> listaPuntosX = objMI.obtenerXFormulaGuss("SED/" + variable.trim(), listResultado);
            centroide = objMI.centroide(listaPuntosX);
            JOptionPane.showMessageDialog(this, "Centroide: " + centroide);

        } catch (IOException ex) {
            Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jmiCentroGravedadActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        GestionArchivos objG = new GestionArchivos();
        List<String> datos;
        String directorio = "SED";
        File index = new File(directorio);
        String[] entries = index.list();

        if (!index.exists()) {
            JOptionPane.showMessageDialog(null, "No hay ningun modelo creado");
            return;
        } else {
            for (String s : entries) {
                if (s.contains("-S")) {
                    try {
                        File currentFile = new File(index.getPath(), s);
                        currentFile.delete();
                        datos = objG.leer(directorio + "\\Datos");
                        for (int i = 0; i < datos.size(); i++) {
                            if (datos.get(i).contains("-S")) {
                                datos.remove(i);
                            }
                        }
                        objG.escribir(directorio + "\\Datos", 0, datos.get(0), "nuevo");
                        for (int i = 1; i < datos.size(); i++) {
                            objG.escribir(directorio + "\\Datos", i, datos.get(i), "final");
                        }
                        break;
                    } catch (IOException ex) {
                        Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        }
        salida = true;
        discurso objD = new discurso(salida);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu7;
    private javax.swing.JMenu jMenu8;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jmiArchivos;
    private javax.swing.JMenuItem jmiCentroGravedad;
    private javax.swing.JMenuItem jmiSalidaDifusa;
    // End of variables declaration//GEN-END:variables
}
