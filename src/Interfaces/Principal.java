package Interfaces;

import SED.Combinaciones;
import SED.Etiqueta;
import SED.FAM;
import SED.GestionArchivos;
import SED.MotorInferencia;
import SED.Variable;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;

/**
 *
 * @author Tenistas
 */
public class Principal extends javax.swing.JFrame {
    
    private MotorInferencia objMI;
    private FAM objFAM;
    List<Etiqueta> listResultado;
    
    public Principal() {
        initComponents();
        listResultado = new ArrayList<>();
        objMI = new MotorInferencia();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu3 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        jMenu4 = new javax.swing.JMenu();
        jMenuItem4 = new javax.swing.JMenuItem();
        jMenu6 = new javax.swing.JMenu();
        jmiFAMNuevo = new javax.swing.JMenuItem();
        jmiFAMExistente = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jmPesoRegla = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Logo/tennis-racket-155963_640.png"))); // NOI18N

        jMenu1.setText("Modelo");

        jMenuItem1.setText("Nuevo");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenu3.setText("Actualizar");

        jMenuItem3.setText("Nueva Variable");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu3.add(jMenuItem3);

        jMenu1.add(jMenu3);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Motor Inferencia");

        jMenuItem2.setText("Fuzzyfication");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenu4.setText("Inferencia");

        jMenuItem4.setText("Inferenciar");
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu4.add(jMenuItem4);

        jMenu6.setText("FAM");

        jmiFAMNuevo.setText("Nuevo");
        jmiFAMNuevo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFAMNuevoActionPerformed(evt);
            }
        });
        jMenu6.add(jmiFAMNuevo);

        jmiFAMExistente.setText("Usar Existente");
        jmiFAMExistente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmiFAMExistenteActionPerformed(evt);
            }
        });
        jMenu6.add(jmiFAMExistente);

        jMenu4.add(jMenu6);

        jMenu2.add(jMenu4);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("Mostrar");

        jmPesoRegla.setText("Peso de la Regla");
        jmPesoRegla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jmPesoReglaActionPerformed(evt);
            }
        });
        jMenu5.add(jmPesoRegla);

        jMenuItem7.setText("Salida Difusa");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem7);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        String directorio = "SED";
        File index = new File(directorio);
        String[] entries = index.list();
        
        if (!index.exists()) {
            index.mkdir();
            JOptionPane.showMessageDialog(null, "Los archivos se han limpiado exitosamente");
        } else {
            for (String s : entries) {
                File currentFile = new File(index.getPath(), s);
                currentFile.delete();
            }
            JOptionPane.showMessageDialog(null, "Los archivos se han limpiado exitosamente");
        }
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jmiFAMNuevoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFAMNuevoActionPerformed
        GestionArchivos objG = new GestionArchivos();
        GUI_Combinaciones guiC;
        List<String> listRegistros;
        Combinaciones objC;
        objFAM = new FAM();
        Variable objV;
        String rutaArchivo;
        try {
            listRegistros = objG.leer("SED/Datos");

            //llena listVariables
            for (String registro : listRegistros) {
                rutaArchivo = "SED/" + registro.trim();
                objMI.crearModelo(rutaArchivo.trim());
                objV = new Variable(objMI.objU, objMI.listTriangular, objMI.listTrapezoide, objMI.listSemiTriangular, objMI.listSemiTrapezoide, objMI.punto, registro);
                objFAM.listVariables.add(objV);
            }
            objC = new Combinaciones();
            objFAM.crear(objFAM.listVariables.get(0), 1, objC, new Combinaciones());
            objFAM.crearArchivo();
            guiC = new GUI_Combinaciones(objFAM.listCombinaciones);
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jmiFAMNuevoActionPerformed

    private void jmiFAMExistenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmiFAMExistenteActionPerformed
        try {
            objFAM = new FAM();
            objFAM.actualizaArchivo();
            System.out.println("");
            JOptionPane.showMessageDialog(this, "Combinaciones cargadas");
        } catch (IOException ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jmiFAMExistenteActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        new discurso();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        GestionArchivos objG = new GestionArchivos();
        List<String> listVars;
        dato_x guiD;
        try {
            listVars = objG.leer("SED/Datos");
            
            for (String variable : listVars) {
                guiD = new dato_x(variable.trim());
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        Combinaciones temp;
        Etiqueta objR = new Etiqueta();
        double minimo;
        boolean check;
        
        for (Combinaciones listC : objFAM.listCombinaciones) {
            minimo = objFAM.calcPesoRegla(listC.listCombinaciones);
            listC.pesoRegla = minimo;
        }
        
        for (int i = 0; i < objFAM.listCombinaciones.size(); i++) {
            temp = objFAM.listCombinaciones.get(i);
            objR.membresia = temp.pesoRegla;
            
            for (int j = 0; j < temp.listSalidas.size(); j++) {
                objR.etiqueta = temp.listSalidas.get(j);
                check = false;
                for (int m = 0; m < listResultado.size() && !check; m++) {
                    if (objR.etiqueta.equalsIgnoreCase(listResultado.get(m).etiqueta)) {
                        check = true;
                    }
                }
                for (int k = i + 1; k < temp.listCombinaciones.size() && !check; k++) {
                    for (int l = 0; l < temp.listSalidas.size(); l++) {
                        if (objR.etiqueta.equalsIgnoreCase(objFAM.listCombinaciones.get(k).listSalidas.get(l))) {
                            if (objR.membresia < objFAM.listCombinaciones.get(k).pesoRegla) {
                                objR.membresia = objFAM.listCombinaciones.get(k).pesoRegla;
                            }
                        }
                    }
                }
                listResultado.add(objR);
            }
        }
        System.out.println("");
    }//GEN-LAST:event_jMenuItem4ActionPerformed

    private void jmPesoReglaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jmPesoReglaActionPerformed
        GestionArchivos objG = new GestionArchivos();
        List<String> listV, tmpR;
        String ruta;
        try {
            listV = objG.leer("SED/Datos");
            
            for (String rVar : listV) {
                ruta = "SED/" + rVar;
                tmpR = objG.leer(ruta.trim());
                
                for (String registro : tmpR) {
                    System.out.println(registro);
                }
                System.out.println("");
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Archivos no disponibles");
        }
    }//GEN-LAST:event_jmPesoReglaActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        GestionArchivos objG = new GestionArchivos();
        List<String> listV, tmpR;
        String ruta;
        try {
            listV = objG.leer("SED/FAM");
            
            for (String registro : listV) {
                System.out.println(registro);
            }
        } catch (IOException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "Archivos no disponibles");
        }
        

    }//GEN-LAST:event_jMenuItem7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenu jMenu6;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JMenuItem jmPesoRegla;
    private javax.swing.JMenuItem jmiFAMExistente;
    private javax.swing.JMenuItem jmiFAMNuevo;
    // End of variables declaration//GEN-END:variables
}
